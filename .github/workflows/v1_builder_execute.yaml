on:
  workflow_call:
    inputs:
      # pass in environment through manual trigger, if not passed in, default to 'dev'
      PROJECT_ID:
        required: true
        type: string
      GITHUB_NAME:
        required: true
        type: string
    secrets:
      CDO_WORKLOAD_IDENTITY_PROVIDER_GCP:
        required: true
jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      ifmodified: ${{ steps.changed-files.outputs.all_modified_files }}
    permissions:
      contents: "write"
      pull-requests: "write"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed for tj-actions/changed-files
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v32
        with:
          json: true
          files: |
            /resources/**/*.yaml
      - name: List all changed files
        run: |
          echo ${{ steps.changed-files.outputs.all_modified_files }}
          for file in ${{ steps.changed-files.outputs.all_modified_files }}; do
            echo "$file"
          done
  Build:
    name: Build
    if: ${{ needs.changed-files.outputs.ifmodified != '[]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: "write"
      pull-requests: "write"
      id-token: "write"
    needs: [changed-files]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # path: workspace
      - name: Authenticate to Google using WIF
        id: auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ secrets.CDO_WORKLOAD_IDENTITY_PROVIDER_GCP }}
          service_account: "cicd-sa@${{ inputs.PROJECT_ID }}.iam.gserviceaccount.com"
          project_id: ${{ inputs.PROJECT_ID }}
          token_format: "access_token"
      - id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v0'
        with:
          secrets: |-
            token:${{ inputs.PROJECT_ID }}/pulumi
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ inputs.PROJECT_ID }}
          service_account_email: "cicd-service-account@${{ inputs.PROJECT_ID }}.iam.gserviceaccount.com"
          export_default_credentials: true
          # export_default_credentials: true
          # credentials_file_path: $GITHUB_WORKSPACE/cred
      - name: Set cred
        run: |
          ls -la
          echo $GOOGLE_APPLICATION_CREDENTIALS
          echo ${GOOGLE_APPLICATION_CREDENTIALS##*/}
          export f=${GOOGLE_APPLICATION_CREDENTIALS##*/}
          echo $f
          echo "GOOGLE_APPLICATION_CREDENTIALS=$f" >> $GITHUB_ENV
          echo ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: "Pull v1 builder img"
        run: |
          gcloud auth configure-docker northamerica-northeast1-docker.pkg.dev --quiet
          docker pull northamerica-northeast1-docker.pkg.dev/cio-workbench-image-np-0ddefe/bi-platform/bi_layer_v2_pr
          docker images
      - name: Run the build process
        uses: addnab/docker-run-action@v3
        with:
            image: northamerica-northeast1-docker.pkg.dev/cio-workbench-image-np-0ddefe/bi-platform/bi_layer_v2_pr
            options: -v ${{ github.workspace }}:/workspace
            run: |
                ls -la
                pwd
                ls -la workspace/
                export team=${{ inputs.GITHUB_NAME }}
                export project=${{ inputs.PROJECT_ID }}
                export state_bucket=pulumi-state-${{ inputs.PROJECT_ID }}
                export project_type=bi-stg
                # export build_sa=bilayer-sa@${{ inputs.PROJECT_ID }}.iam.gserviceaccount.com
                export build_sa="cicd-service-account@${{ inputs.PROJECT_ID }}.iam.gserviceaccount.com"
                export PULUMI_ACCESS_TOKEN='${{ steps.secrets.outputs.token }}'
                export PULUMI_CONFIG_PASSPHRASE='${{ steps.secrets.outputs.token }}'
                echo $state_bucket
                pulumi version
                python --version
                export GOOGLE_APPLICATION_CREDENTIALS=/workspace/${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
                echo $GOOGLE_APPLICATION_CREDENTIALS
                pulumi --non-interactive login gs://pulumi-state-${{ inputs.PROJECT_ID }}
                python /builder.py $team $project $project_type $build_sa