on:
  workflow_call:
    inputs:
      # pass in environment through manual trigger, if not passed in, default to 'dev'
      PROJECT_ID:
        required: true
        type: string
      GITHUB_NAME:
        required: true
        type: string
      CICD_SA:
        required: true
        type: string
    secrets:
      CDO_WORKLOAD_IDENTITY_PROVIDER_GCP:
        required: true

jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      ifmodified: ${{ steps.changed-files-docker.outputs.all_changed_files }}
      dmatrix: ${{ steps.set-matrix.outputs.matrix }}
    permissions:
      contents: "write"
      pull-requests: "write"
      id-token: "write"
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed for tj-actions/changed-files
      - name: Get changed files docker
        id: changed-files-docker
        uses: tj-actions/changed-files@v32
        with:
          json: true
          files: |
            /images/*/Dockerfile
      - id: set-matrix
        run: echo "matrix={\"container\":${{ steps.changed-files-docker.outputs.all_changed_files }}}" >> "$GITHUB_OUTPUT"
  matrix-job-docker:
    name: build docker
    if: ${{ needs.changed-files.outputs.ifmodified != '[]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: "write"
      pull-requests: "write"
      id-token: "write"
    needs: [changed-files]
    strategy:
      matrix: ${{ fromJSON(needs.changed-files.outputs.dmatrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: install gcloud
        uses: "google-github-actions/setup-gcloud@v0"
      - name: Test
        run: |
          ls -la
          echo ${{ matrix.container }}
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # path: workspace
      - name: Authenticate to Google using WIF
        id: auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ secrets.CDO_WORKLOAD_IDENTITY_PROVIDER_GCP }}
          service_account: ${{ inputs.CICD_SA }}
          project_id: ${{ inputs.PROJECT_ID }}
          token_format: "access_token"
      - name: Run the img build process
        run: |
          gcloud auth configure-docker northamerica-northeast1-docker.pkg.dev
          export image_folder="$(dirname "${{ matrix.container }}")"
          echo $image_folder
          version=$(cat "${image_folder}/VERSION")
          image_tag="northamerica-northeast1-docker.pkg.dev/cio-workbench-image-np-0ddefe/bi-platform/${{ github.event.repository.name }}/"${image_folder}":${version}"
          echo "${image_tag}"
          docker build -t "${image_tag}" "${image_folder}"
          docker push "${image_tag}"